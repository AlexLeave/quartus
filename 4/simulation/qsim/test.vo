// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Full Version"

// DATE "08/26/2020 19:35:44"

// 
// Device: Altera EP4CE10E22C8 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module test (
	A,
	B,
	C0,
	S,
	C4);
input 	[3:0] A;
input 	[3:0] B;
input 	C0;
output 	[3:0] S;
output 	C4;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \S[0]~output_o ;
wire \S[1]~output_o ;
wire \S[2]~output_o ;
wire \S[3]~output_o ;
wire \C4~output_o ;
wire \A[0]~input_o ;
wire \B[0]~input_o ;
wire \C0~input_o ;
wire \u1|u2|S0~0_combout ;
wire \B[1]~input_o ;
wire \A[1]~input_o ;
wire \u1|u3~0_combout ;
wire \u2|u2|S0~combout ;
wire \u2|u3~0_combout ;
wire \A[2]~input_o ;
wire \B[2]~input_o ;
wire \u3|u2|S0~combout ;
wire \u3|u3~0_combout ;
wire \A[3]~input_o ;
wire \B[3]~input_o ;
wire \u4|u2|S0~combout ;
wire \u4|u3~0_combout ;


cycloneive_io_obuf \S[0]~output (
	.i(\u1|u2|S0~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[0]~output .bus_hold = "false";
defparam \S[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \S[1]~output (
	.i(\u2|u2|S0~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[1]~output .bus_hold = "false";
defparam \S[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \S[2]~output (
	.i(\u3|u2|S0~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[2]~output .bus_hold = "false";
defparam \S[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \S[3]~output (
	.i(\u4|u2|S0~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[3]~output .bus_hold = "false";
defparam \S[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \C4~output (
	.i(\u4|u3~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\C4~output_o ),
	.obar());
// synopsys translate_off
defparam \C4~output .bus_hold = "false";
defparam \C4~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \A[0]~input (
	.i(A[0]),
	.ibar(gnd),
	.o(\A[0]~input_o ));
// synopsys translate_off
defparam \A[0]~input .bus_hold = "false";
defparam \A[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \B[0]~input (
	.i(B[0]),
	.ibar(gnd),
	.o(\B[0]~input_o ));
// synopsys translate_off
defparam \B[0]~input .bus_hold = "false";
defparam \B[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \C0~input (
	.i(C0),
	.ibar(gnd),
	.o(\C0~input_o ));
// synopsys translate_off
defparam \C0~input .bus_hold = "false";
defparam \C0~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \u1|u2|S0~0 (
// Equation(s):
// \u1|u2|S0~0_combout  = \A[0]~input_o  $ (\B[0]~input_o  $ (\C0~input_o ))

	.dataa(\A[0]~input_o ),
	.datab(\B[0]~input_o ),
	.datac(\C0~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\u1|u2|S0~0_combout ),
	.cout());
// synopsys translate_off
defparam \u1|u2|S0~0 .lut_mask = 16'h9696;
defparam \u1|u2|S0~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \B[1]~input (
	.i(B[1]),
	.ibar(gnd),
	.o(\B[1]~input_o ));
// synopsys translate_off
defparam \B[1]~input .bus_hold = "false";
defparam \B[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \A[1]~input (
	.i(A[1]),
	.ibar(gnd),
	.o(\A[1]~input_o ));
// synopsys translate_off
defparam \A[1]~input .bus_hold = "false";
defparam \A[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \u1|u3~0 (
// Equation(s):
// \u1|u3~0_combout  = (\A[0]~input_o  & ((\B[0]~input_o ) # (\C0~input_o ))) # (!\A[0]~input_o  & (\B[0]~input_o  & \C0~input_o ))

	.dataa(\A[0]~input_o ),
	.datab(\B[0]~input_o ),
	.datac(\C0~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\u1|u3~0_combout ),
	.cout());
// synopsys translate_off
defparam \u1|u3~0 .lut_mask = 16'hE8E8;
defparam \u1|u3~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \u2|u2|S0 (
// Equation(s):
// \u2|u2|S0~combout  = \B[1]~input_o  $ (\A[1]~input_o  $ (\u1|u3~0_combout ))

	.dataa(\B[1]~input_o ),
	.datab(\A[1]~input_o ),
	.datac(\u1|u3~0_combout ),
	.datad(gnd),
	.cin(gnd),
	.combout(\u2|u2|S0~combout ),
	.cout());
// synopsys translate_off
defparam \u2|u2|S0 .lut_mask = 16'h9696;
defparam \u2|u2|S0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \u2|u3~0 (
// Equation(s):
// \u2|u3~0_combout  = (\B[1]~input_o  & ((\A[1]~input_o ) # (\u1|u3~0_combout ))) # (!\B[1]~input_o  & (\A[1]~input_o  & \u1|u3~0_combout ))

	.dataa(\B[1]~input_o ),
	.datab(\A[1]~input_o ),
	.datac(\u1|u3~0_combout ),
	.datad(gnd),
	.cin(gnd),
	.combout(\u2|u3~0_combout ),
	.cout());
// synopsys translate_off
defparam \u2|u3~0 .lut_mask = 16'hE8E8;
defparam \u2|u3~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \A[2]~input (
	.i(A[2]),
	.ibar(gnd),
	.o(\A[2]~input_o ));
// synopsys translate_off
defparam \A[2]~input .bus_hold = "false";
defparam \A[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \B[2]~input (
	.i(B[2]),
	.ibar(gnd),
	.o(\B[2]~input_o ));
// synopsys translate_off
defparam \B[2]~input .bus_hold = "false";
defparam \B[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \u3|u2|S0 (
// Equation(s):
// \u3|u2|S0~combout  = \u2|u3~0_combout  $ (\A[2]~input_o  $ (\B[2]~input_o ))

	.dataa(\u2|u3~0_combout ),
	.datab(\A[2]~input_o ),
	.datac(\B[2]~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\u3|u2|S0~combout ),
	.cout());
// synopsys translate_off
defparam \u3|u2|S0 .lut_mask = 16'h9696;
defparam \u3|u2|S0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \u3|u3~0 (
// Equation(s):
// \u3|u3~0_combout  = (\u2|u3~0_combout  & ((\A[2]~input_o ) # (\B[2]~input_o ))) # (!\u2|u3~0_combout  & (\A[2]~input_o  & \B[2]~input_o ))

	.dataa(\u2|u3~0_combout ),
	.datab(\A[2]~input_o ),
	.datac(\B[2]~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\u3|u3~0_combout ),
	.cout());
// synopsys translate_off
defparam \u3|u3~0 .lut_mask = 16'hE8E8;
defparam \u3|u3~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \A[3]~input (
	.i(A[3]),
	.ibar(gnd),
	.o(\A[3]~input_o ));
// synopsys translate_off
defparam \A[3]~input .bus_hold = "false";
defparam \A[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \B[3]~input (
	.i(B[3]),
	.ibar(gnd),
	.o(\B[3]~input_o ));
// synopsys translate_off
defparam \B[3]~input .bus_hold = "false";
defparam \B[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \u4|u2|S0 (
// Equation(s):
// \u4|u2|S0~combout  = \u3|u3~0_combout  $ (\A[3]~input_o  $ (\B[3]~input_o ))

	.dataa(\u3|u3~0_combout ),
	.datab(\A[3]~input_o ),
	.datac(\B[3]~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\u4|u2|S0~combout ),
	.cout());
// synopsys translate_off
defparam \u4|u2|S0 .lut_mask = 16'h9696;
defparam \u4|u2|S0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \u4|u3~0 (
// Equation(s):
// \u4|u3~0_combout  = (\u3|u3~0_combout  & ((\A[3]~input_o ) # (\B[3]~input_o ))) # (!\u3|u3~0_combout  & (\A[3]~input_o  & \B[3]~input_o ))

	.dataa(\u3|u3~0_combout ),
	.datab(\A[3]~input_o ),
	.datac(\B[3]~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\u4|u3~0_combout ),
	.cout());
// synopsys translate_off
defparam \u4|u3~0 .lut_mask = 16'hE8E8;
defparam \u4|u3~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign S[0] = \S[0]~output_o ;

assign S[1] = \S[1]~output_o ;

assign S[2] = \S[2]~output_o ;

assign S[3] = \S[3]~output_o ;

assign C4 = \C4~output_o ;

endmodule
